1.所用公共模块部分涉及的表，最好抽成视图（防止需要换表时需要整个项目中一起修改）
2.编写注释
3.能写成配置项的尽量写在配置文件中，不要写死在程序中，后期bug（需求变动）基本都是写死的问题
4.开发之前先将sql打印功能开发出来（后期找错方便）
5.高并发和数据量的大的功能可以考虑spring微服务
6.设计数据库表时可以同时考虑函数（随机,新增,查询等）的创建（方便后期插入数据）
7.sql语句查询时如数据量大并且需要转换的字段多,可以考虑分段查询
8.sql语句查询的条件中涉及函数,涉及函数部分尽量单独抽出提前查询出结果再作为查询条件（函数执行是每一条数据执行一次，很影响查询效率）
9.拥有树形结构的自联表，在业务场景操作时尽量使用业务主键（code）,减少对逻辑主键的使用（id）
10.非必要情况请不要使用缓存、定时循环等,对于请求按钮请对其进行时效限制,防止用户短时间内多次点击
11.根据项目中数据量选择合适的数据库是十分重要的,如没有话语权就不要考虑什么sql查询的优化,浪费时间(自己学习就行,不要自作聪明，优化意味着代码的可阅读性不高，产出和投入不符)
12.代码要考虑是否可以复用以及可扩展性，js代码必须闭包，html代码越少越好，针对数据库修改需要SQL语句修改并且留档