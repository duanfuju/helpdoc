JavaScript脚本语言：
	JavaScript是一种轻量级的编程语言
	JavaScript是可插入HTML页面的编程代码
	JavaScript插入HTML页面后，可由所有的浏览器执行

输出（可包含标签）：document.write("内容");

注释
	单行注释：//
	多行注释：/**/

数据类型
	1.字符串(String)
	2.数字(Number)
	3.布尔(Boolean)
	4.数组(Array)
	5.对象(Object)
	6.空(null)
	7.未定义
	8.可以通过赋值为null的方式清除变量

运算符
	1.算术运算符：
		+、-、*、/、++(在前面是先加再运算，在后面是运算再加)、--
	2.赋值运算符：
		=、+=、-=、*=、/=、%=
	3.字符串操作
	4.逻辑运算符：
		&&、||、！
	5.比较运算符：
		==（两个变量的数据类型可以不一样）、===（两个变量的数据类型必须是一样）、!=、!==、<、>、>=、<=
	6.条件运算符：
		例:  x<10? "x比10小":"x比10大"


条件语句
	①if(){
	
	 }else{
	
	 }

	②switch(i){
		case 1:
			break;
		case 2:
			break;
		default:
			break;
	}


循环语句
	for循环  、   for/in
	while循环 、  do...while

跳转语句
	break、continue



函数
	含义：
		函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块
	定义：
		function 函数名([可选参数]){
			函数体;（代码块）
			[return  可选返回值]
		}

	调用：
		函数在定义好之后，不能自动执行，需要进行调用
		调用方式：
			1.在<script>标签内调用
			2.在HTML文件中调用

变量
	局部变量
		只能在当前函数中使用
	全局变量
		任何地方都可以使用
		声明：
			1.在函数外声明的变量
			2.在函数内声明却没有带var的变量（函数必须执行之后才能算是全局变量）
				例：
				function demo(){
					x=10;
				}
				demo();
				alert(x);
异常捕获
	try{
		//可能发生错误的代码
	}catch(err){
		alert(err);
	}
自定义异常
	try{
		if(condition){
			throw "自定义错误";
		}
	}catch(err){
		alert(err);
	}

事件
	onClick：单击事件
	onMouseOver：鼠标经过事件
	onMouseOut：鼠标移出事件
	onChange：文本内容改变事件
	onSelect：文本框选中事件
	onFocus：光标聚集事件
	onBlur：移开光标事件
	onLoad：网页加载事件
	onUnload：关闭网页事件

DOM（Document Object Model）
	注意：绝对不要在文档加载完成之后使用document.write(),这个会覆盖改文档
	EventListener:
		方法:addEventListener();
		     removeEventListener();
		     例：
			document.getElementById("").addEventListener("click",function(){}||functionName);
			document.getElementById("").removeEventListener(functionName);


事件流
	1.事件流：描述的是在页面中接受事件的顺序
	2.事件冒泡：由最具体的元素接收，然后逐级向上传播最不具体的元素的节点（文档）
	3.事件捕获：最不具体的节点先接收事件，而最具体的节点应该是最后接收事件



事件处理
	1.HTML事件处理：
		直接添加到HTML结构中
	2.DOM0级事件处理
		把一个函数赋值给一个事件处理程序属性
	3.DOM2级事件处理
		addEventListener("事件名","事件处理	函数","布尔值");
		true:事件捕获
		false:事件冒泡
		removeEventListener();
	4.IE事件处理程序
		attachEvent
		detachEvent

事件对象
	1.事件对象：在触发DOM事件的时候都会产生一个对象
	2.事件对象event：
		①type：获取事件类型
		②target：获取事件目标
		③stopPropagtion()：阻止事件冒泡
		④preventDefault()：阻止事件默认行为



js内置对象
	String字符串对象
		indexOf():在字符串中查找字符串
		match():内容匹配
		replace():替换内容
		toUpperCase()/toLowerCase():字符串大小写转换
		String.split():字符串转化为数组
	Date日期对象
		getFullYear():获取年份
		getHours():获取小时数
		getMinutes():获取分钟数
		getSeconds():获取秒数
		getTime():获取毫秒
		getFullYear():设置具体的日期
		getDay():获取星期
	Array数组对象
		concat():合并数组
		sort():排序
			升序:array.sort(function(a,b){
				return a-b;
			);
			降序:array.sort(function(a,b){
				return b-a;
			});
		push():末尾追加元素
		reverse():数组元素翻转
	Math对象
		round():四舍五入
		random():返回0 ~ 1之间的随机数
		max():返回最高值
		min():返回中的最低值
		abs():返回绝对值
	自定义对象
		1.定义并创建对象实例
		2.使用函数来定义对象，然后创建新的对象实例


DOM对象控制HTML
方法:
	getElementByName():获取name
	getElementsByTagName():获取元素
	getAttribute():获取元素属性
	setAttribute():设置元素属性
	childNodes():访问子节点
	parentNodes():访问父节点
	createElement():创建元素节点
	createTextNode():创建文本节点
	insertBefore():插入节点
	removeChild():删除节点
	offsetHight:网页尺寸
	scrollHeight:网页尺寸

Window对象：
	window对象是BOM的核心，window对象指当前的浏览器窗口
	所有JavaScript全局对象、函数以及变量均自动成为window对象的成员
	全局变量是window对象的属性
	全局函数是window对象的方法
	甚至HTML DOM的document也是window对象的属性之一
	属性：
		window.innerHeight：浏览器窗口的内部高度
		window.innerWidth：浏览器窗口的内部宽度
	方法：
		window.open():打开新窗口
		window.close():关闭当前窗口
计时器
	setInterval():间隔指定的毫秒数不停地执行指定的代码
		clearInterval()方法用于指定setInterval()方法执行的函数代码
	setTimeout():暂停指定的毫秒数后执行指定的代码
		clearTimeout()方法用于停止执行setTimeout()方法的函数代码

History对象
	window.history 对象包含浏览器的历史(url)的集合
	方法
		history.back():与在浏览器点击后退按钮相同
		history.forward():在与浏览器中点击按钮向前相同
		history.go():进入历史中的某个页面

Location对象
	window.location 对象用于获得当前页面的地址（URL），并把浏览器重定向到新的页面
	属性
		location.hostname：返回web主机的域名
		location.pathname：返回当前页面的路径和文件名
		location.port：返回web主机的端口
		location.protocol：返回所使用的web协议（http://或https://）
		location.href：属性返回当前页面的URL
		location.assign():方法加载新的文档
Navigator对象 
	Navigator 对象是由 JavaScript runtime engine 自动创建的，包含有关客户机浏览器的信息。
	属性
		appCodeName：返回浏览器的代码名。
		appMinorVersion：返回浏览器的次级版本。
		appName：返回浏览器的名称。
		appVersion：返回浏览器的平台和版本信息。
		browserLanguage：返回当前浏览器的语言。
		cookieEnabled：返回指明浏览器中是否启用 cookie 的布尔值。
		cpuClass：返回浏览器系统的 CPU 等级。
		onLine：返回指明系统是否处于脱机模式的布尔值。
		platform：返回运行浏览器的操作系统平台。
Screen对象
	window.screen 对象包含有关用户屏幕的信息
	属性
		screen.availWidth:可用的屏幕宽度
		screen.availHeight:可用的屏幕高度
		screen.Height：屏幕高度
		screen.Width:屏幕宽度


面向对象中的概念
	1.一切事物皆对象
	2.对象具有封装和继承特性
	3.信息隐藏

prototype
	向对象添加属性和方法
	函数即对象
call()
	为函数方法指定对象名称
	能够扩充函数赖以运行的作用域
 





















































